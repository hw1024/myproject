<style lang="less">
  .weui-manage__body .weui-manage__title{
    font-size: 38rpx;
    color:#1AAD19;
    margin-bottom:28rpx;
  }
  .weui-manage__body .weui-manage__title:after{
    content:"";
    display: block;
    height:1px;
    width: 150rpx;
    background-color: #1AAD19;
  }
  .weui-result{
    margin-bottom:40rpx;
    font-size: 32rpx;
  }
  .weui-result .weui-result__list{
    display: flex;
    flex-direction: row;
    margin-bottom:28rpx;
  }
  .weui-result .weui-result__title{
    margin-right:26rpx;
  }
  .weui-result .weui-result__num{
    color:#1AAD19;
  }
  .weui-result .weui-result__tips{
    color:#ff6000;font-size: 28rpx;
  }
  .weui-plan .weui-plan__title, .weui-plan .weui-plan__list, .weui-plan .weui-plan__lower{
    display: flex;
    flex-direction: row;
    border: 1px solid #ebebeb;
    font-size: 26rpx;
  }
  .weui-plan .weui-plan__list, .weui-plan .weui-plan__lower{
    border-top: none;
  }
  .weui-plan .weui-plan__item{
    width: 25%;
    height:60rpx;
    line-height: 60rpx;
    text-align: center;
    border-right: 1px solid #ebebeb;
  }
  .weui-plan .weui-plan__item:nth-of-type(4){
    border-right: none;
  }
</style>
<template>
  <view class="weui-container">
  <view class="weui-section">
    <view class="weui-manage__body">
      <view class="weui-manage__title">计算结果</view>
      <view class="weui-result">
        <view class="weui-result__list">
            <view class="weui-result__title">总收益:</view>
            <view class="weui-result__num">{{summoney}}</view>
            <view class="weui-result__unit">元</view>
          </view>
          <view class="weui-result__list">
            <view class="weui-result__title">{{resultTitle}}:</view>
            <view class="weui-result__num">{{resultNum}}</view>
            <view class="weui-result__unit">元</view>  
          </view>
          <view class="weui-result__list">
          <view class="weui-result__depict">{{resultDepict}}</view>
          </view>
          <view class="weui-result__list">
          <view class="weui-result__tips">备注:收益计算数据仅供参考，实际情况以平台为准</view>
          </view>
      </view>
      <view class="weui-manage__title">回款计划</view>
      <view class="weui-plan">
        <view class="weui-plan__title">
          <view class="weui-plan__item">期数</view>
          <view class="weui-plan__item">应收本金</view>
          <view class="weui-plan__item">应收利息</view>
          <view class="weui-plan__item">应收总额</view>
        </view>
        <view class="weui-plan__list" wx:for="{{results}}" wx:key="resultsId">
          <view class="weui-plan__item">{{item.id}}</view>
          <view class="weui-plan__item">{{item.capital}}</view>
          <view class="weui-plan__item">{{item.interest}}</view>
          <view class="weui-plan__item">{{item.repayment}}</view>
        </view>
        <view class="weui-plan__lower">
          <view class="weui-plan__item">总计</view>
          <view class="weui-plan__item">{{capitalTotal}}</view>
          <view class="weui-plan__item">{{interestTotal}}</view>
          <view class="weui-plan__item">{{repaymentTotal}}</view>
        </view>
      </view>
    </view>
  </view>
  </view>
</template>
<script>
  import wepy from 'wepy'

  export default class Manage extends wepy.page {
    config = {
      navigationBarTitleText: '收益计算器'
    }

    data = {
      summoney: '',
      resultTitle: '',
      resultNum: '',
      resultDepict: '',
      results: [],
      capitalTotal: '',
      interestTotal: '',
      repaymentTotal: ''
    }

    methods = {

    }
    onLoad (options) {
      let repayArray = []
      let [indexVal, amountVal, annualRateVal, deadLineVal, typeVal] = [options.index, options.amount, options.annualRate, options.deadLine, options.type]
      if (typeVal === 'mouth' && indexVal === '0') {
        let interest = (amountVal * annualRateVal / 1200).toFixed(2)
        let capital = 0
        let interestTotal = (amountVal * annualRateVal * deadLineVal / 1200).toFixed(2)
        for (let i = 1; i <= deadLineVal; i++) {
          if (i === deadLineVal) {
            capital = parseFloat(amountVal).toFixed(2)
            interest = (interestTotal - interest * (i - 1)).toFixed(2)
          }
          let repayment = Math.round((parseFloat(capital) + parseFloat(interest)).toFixed(2) * 100) / 100.0
          repayArray.push(
            {id: i, capital: capital, interest: interest, repayment: repayment}
          )
        }
        this.summoney = (amountVal * annualRateVal * deadLineVal / 1200).toFixed(2)
        this.results = repayArray
        this.resultTitle = '每月应收'
        this.resultNum = interest
        this.resultDepict = '每个月收到的利息，最后一个月收回本金'
        this.capitalTotal = parseFloat(amountVal).toFixed(2)
        this.interestTotal = interestTotal
        this.repaymentTotal = (parseFloat(amountVal) + parseFloat(interestTotal)).toFixed(2)
      } else if (typeVal === 'mouth' && indexVal === '1') {
        let repayment = (amountVal * (annualRateVal / 12 / 100) * Math.pow((1 + (annualRateVal / 12 / 100)), deadLineVal) / (Math.pow((1 + (annualRateVal / 12 / 100)), deadLineVal) - 1)).toFixed(2)
        let interestTotal = (deadLineVal * amountVal * (annualRateVal / 12 / 100) * Math.pow((1 + (annualRateVal / 12 / 100)), deadLineVal) / (Math.pow((1 + (annualRateVal / 12 / 100)), deadLineVal) - 1) - amountVal).toFixed(2)
        let capitalReady = 0
        let interest
        for (let i = 1; i <= deadLineVal; i++) {
          if (i === 1) {
            interest = Math.round(amountVal * (annualRateVal / 12 / 100) * 100) / 100.0
          } else {
            interest = Math.round(((amountVal * (annualRateVal / 12 / 100) - parseFloat(repayment)) * Math.pow((1 + (annualRateVal / 12 / 100)), (i - 1)) + parseFloat(repayment)) * 100) / 100.0
          }

          let capital = (parseFloat(repayment) - parseFloat(interest)).toFixed(2)
          if (i === deadLineVal) {
            capital = (amountVal - capitalReady).toFixed(2)
            repayment = Math.round((parseFloat(capital) + parseFloat(interest)).toFixed(2) * 100) / 100.0
            repayArray.push(
              {id: i, capital: capital, interest: interest, repayment: repayment}
            )
          } else {
            repayArray.push(
              {id: i, capital: capital, interest: interest, repayment: repayment}
            )
          }
          capitalReady += Math.round((repayment - interest) * 100) / 100.0
        }
        this.summoney = (deadLineVal * amountVal * (annualRateVal / 12 / 100) * Math.pow((1 + (annualRateVal / 12 / 100)), deadLineVal) / (Math.pow((1 + (annualRateVal / 12 / 100)), deadLineVal) - 1) - amountVal).toFixed(2)
        this.results = repayArray
        this.resultTitle = '每月应收'
        this.resultNum = repayment
        this.resultDepict = '每个月收到的本金与利息和相同'
        this.capitalTotal = parseFloat(amountVal).toFixed(2)
        this.interestTotal = interestTotal
        this.repaymentTotal = (parseFloat(amountVal) + parseFloat(interestTotal)).toFixed(2)
      } else if (typeVal === 'mouth' && indexVal === '2') {
        let capital = parseFloat(amountVal).toFixed(2)
        let interest = (amountVal * annualRateVal * deadLineVal / 1200).toFixed(2)
        let repayment = (parseFloat(capital) + parseFloat(interest)).toFixed(2)
        this.summoney = (amountVal * annualRateVal * deadLineVal / 1200).toFixed(2)
        this.results = [{id: 1, capital: capital, interest: interest, repayment: repayment}]
        this.resultTitle = '最后应收'
        this.resultNum = repayment
        this.resultDepict = '最后一次性收回本息'
        this.capitalTotal = parseFloat(amountVal).toFixed(2)
        this.interestTotal = interest
        this.repaymentTotal = (parseFloat(amountVal) + parseFloat(interest)).toFixed(2)
      } else if (typeVal === 'mouth' && indexVal === '3') {
        let capital = (amountVal / deadLineVal).toFixed(2)
        let interestTotal = 0
        let repaymentedAccount = 0
        let interest
        let repayment
        for (let i = 1; i <= deadLineVal; i++) {
          interest = ((amountVal - repaymentedAccount) * annualRateVal / 1200).toFixed(2)
          if (i === deadLineVal) {
            capital = parseFloat(amountVal - repaymentedAccount).toFixed(2)
            repayment = (parseFloat(capital) + parseFloat(interest)).toFixed(2)
            repayArray.push(
              {id: i, capital: capital, interest: interest, repayment: repayment}
            )
          } else {
            repayment = (parseFloat(capital) + parseFloat(interest)).toFixed(2)
            repayArray.push(
              {id: i, capital: capital, interest: interest, repayment: repayment}
            )
          }
          repaymentedAccount += parseFloat(capital)
          interestTotal += parseFloat(interest)
        }
        this.summoney = interestTotal.toFixed(2)
        this.results = repayArray
        this.resultTitle = '最后应收'
        this.resultNum = (parseFloat(amountVal) + parseFloat(interestTotal)).toFixed(2)
        this.resultDepict = '每个月收到的本金相同,利息越来越少'
        this.capitalTotal = parseFloat(amountVal).toFixed(2)
        this.interestTotal = interestTotal.toFixed(2)
        this.repaymentTotal = (parseFloat(amountVal) + parseFloat(interestTotal)).toFixed(2)
      } else {
        let capital = parseFloat(amountVal).toFixed(2)
        let interest = (amountVal * annualRateVal * deadLineVal / 36500).toFixed(2)
        let repayment = (parseFloat(capital) + parseFloat(interest)).toFixed(2)
        this.summoney = (amountVal * annualRateVal * deadLineVal / 36500).toFixed(2)
        this.results = [{id: 1, capital: capital, interest: interest, repayment: repayment}]
        this.resultTitle = '最后应收'
        this.resultNum = repayment
        this.resultDepict = '最后一次性收回本息'
        this.capitalTotal = parseFloat(amountVal).toFixed(2)
        this.interestTotal = interest
        this.repaymentTotal = (parseFloat(amountVal) + parseFloat(interest)).toFixed(2)
      }
    }
  }
</script>
